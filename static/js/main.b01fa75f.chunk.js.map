{"version":3,"sources":["InputForNumber/InputForNumber.jsx","utils/GeneratePassword.js","images/picture-happy-cat.jpg","images/picture-sad-cat.jpg","PasswordForm/PasswordForm.jsx","App/App.jsx","index.js"],"names":["InputForNumber","React","forwardRef","ref","lastInput","nextInput","buttonSubmit","isFirst","addNumberToCode","isRefresh","index","useState","digit","setDigit","useEffect","value","type","minLength","maxLength","className","autoComplete","onChange","e","inputValue","target","Number","isInteger","parseInt","current","focus","onFocus","select","GeneratePassword","min","Math","pow","NUMBER_OF_DIGIT","max","floor","random","PasswordForm","inputCode","setInputCode","generateCode","setGenerateCode","isOk","setIsOk","setRefresh","digits","length","toString","console","log","refFirstDigit","useRef","refSecondDigit","refThirdDigit","refFourthDigit","refFifthDigit","refSixthDigit","refs","refButtonSubmit","number","onClick","onSubmit","preventDefault","join","map","src","happyCatPicture","sadCatPicture","alt","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b01fa75f.chunk.js","sourcesContent":["import \"./InputForNumber.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst InputForNumber = React.forwardRef(\r\n  (\r\n    {\r\n      lastInput,\r\n      nextInput,\r\n      isFirst,\r\n      buttonSubmit,\r\n      addNumberToCode,\r\n      isRefresh,\r\n      index,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [digit, setDigit] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n      isRefresh && setDigit(\"\");\r\n    }, [isRefresh]);\r\n\r\n    useEffect(() => {\r\n      addNumberToCode(digit, index);\r\n    }, [digit, index, addNumberToCode]);\r\n\r\n    const onChange = (e) => {\r\n      const inputValue = e.target.value;\r\n      if (e.target.value === \"\") {\r\n        setDigit(e.target.value);\r\n      } else if (Number.isInteger(parseInt(inputValue))) {\r\n        setDigit(e.target.value);\r\n        if (buttonSubmit) {\r\n          buttonSubmit.current.focus();\r\n        } else {\r\n          if (nextInput.current.value === \"\") nextInput.current.focus();\r\n        }\r\n      }\r\n    };\r\n\r\n    const onFocus = (e) => {\r\n      if (lastInput && lastInput.current.value === \"\") {\r\n        lastInput.current.focus();\r\n      } else e.target.select();\r\n    };\r\n\r\n    return (\r\n      <input\r\n        ref={ref}\r\n        value={digit}\r\n        type=\"text\"\r\n        minLength=\"1\"\r\n        maxLength=\"1\"\r\n        className=\"InputForNumber\"\r\n        autoComplete=\"new-password\"\r\n        onChange={onChange}\r\n        onFocus={onFocus}\r\n      />\r\n    );\r\n  }\r\n);\r\n\r\nexport default InputForNumber;\r\n","const NUMBER_OF_DIGIT = 6;\r\n\r\nfunction GeneratePassword() {\r\n    const min = Math.pow(10, NUMBER_OF_DIGIT - 1);\r\n    const max = Math.pow(10, NUMBER_OF_DIGIT) - 1;\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport { GeneratePassword, NUMBER_OF_DIGIT };","export default __webpack_public_path__ + \"static/media/picture-happy-cat.3c4b7044.jpg\";","export default __webpack_public_path__ + \"static/media/picture-sad-cat.b32f947e.jpg\";","import \"./PasswordForm.css\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport InputForNumber from \"../InputForNumber/InputForNumber\";\r\nimport { GeneratePassword, NUMBER_OF_DIGIT } from \"../utils/GeneratePassword\";\r\nimport happyCatPicture from \"../images/picture-happy-cat.jpg\";\r\nimport sadCatPicture from \"../images/picture-sad-cat.jpg\";\r\n\r\nfunction PasswordForm() {\r\n  const [inputCode, setInputCode] = useState(\"\");\r\n  const [generateCode, setGenerateCode] = useState(\"\");\r\n  const [isOk, setIsOk] = useState(false);\r\n  const [isRefresh, setRefresh] = useState(false);\r\n\r\n  let digits = [];\r\n\r\n  useEffect(() => {\r\n    if (\r\n      inputCode.length === NUMBER_OF_DIGIT &&\r\n      generateCode.toString() === inputCode\r\n    ) {\r\n      console.log(\"ok\");\r\n      setIsOk(true);\r\n    } else {\r\n      console.log(\"not ok\");\r\n      setIsOk(false);\r\n    }\r\n    setRefresh(false);\r\n  }, [inputCode, generateCode]);\r\n\r\n  const refFirstDigit = useRef();\r\n  const refSecondDigit = useRef();\r\n  const refThirdDigit = useRef();\r\n  const refFourthDigit = useRef();\r\n  const refFifthDigit = useRef();\r\n  const refSixthDigit = useRef();\r\n\r\n  const refs = [\r\n    refFirstDigit,\r\n    refSecondDigit,\r\n    refThirdDigit,\r\n    refFourthDigit,\r\n    refFifthDigit,\r\n    refSixthDigit,\r\n  ];\r\n\r\n  const refButtonSubmit = useRef();\r\n\r\n  const onClickGenerateButton = (e) => {\r\n    setGenerateCode(GeneratePassword);\r\n    setInputCode(\"\");\r\n    refFirstDigit.current.value = 0;\r\n    setRefresh(true);\r\n    digits = [];\r\n  };\r\n\r\n  const addNumberToCode = (number, index) => {\r\n    digits[index] = number;\r\n  };\r\n\r\n  const onSubmitPasswordForm = (e) => {\r\n    e.preventDefault();\r\n    setInputCode(digits.join(\"\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"section-container\">\r\n      <div className=\"GeneratingPasswordSection\">\r\n        <h1 className=\"GeneratingPasswordSection__title\">Generate Password</h1>\r\n        <p className=\"GeneratingPasswordSection__desc\">\r\n          Click button to generate new code\r\n        </p>\r\n        <button\r\n          className=\"GeneratingPasswordSection__button\"\r\n          onClick={onClickGenerateButton}\r\n        >\r\n          Generate\r\n        </button>\r\n        <p className=\"GeneratingPasswordSection__result-container\">\r\n          New password:\r\n          <span> {generateCode}</span>\r\n        </p>\r\n      </div>\r\n      <form className=\"PasswordForm\" onSubmit={onSubmitPasswordForm}>\r\n        <h2 className=\"PasswordForm__title\">Password</h2>\r\n        <p className=\"PasswordForm__subtitle\">Enter the code we generate</p>\r\n        <div className=\"PasswordForm__inputs\">\r\n          {refs.map((ref, index) => (\r\n            <InputForNumber\r\n              key={index}\r\n              ref={ref}\r\n              lastInput={index > 0 ? refs[index - 1] : null}\r\n              nextInput={\r\n                index < NUMBER_OF_DIGIT - 1 ? refs[index + 1] : refButtonSubmit\r\n              }\r\n              isFirst={index === 0 ? true : false}\r\n              addNumberToCode={addNumberToCode}\r\n              isRefresh={isRefresh}\r\n              index={index}\r\n            />\r\n          ))}\r\n        </div>\r\n        <button className=\"PasswordForm__button\" ref={refButtonSubmit}>\r\n          Check\r\n        </button>\r\n      </form>\r\n      <img\r\n        className=\"result-picture\"\r\n        src={isOk ? happyCatPicture : sadCatPicture}\r\n        alt=\"cat\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PasswordForm;\r\n","import \"./App.css\";\nimport PasswordForm from \"../PasswordForm/PasswordForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <PasswordForm />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}